G = [
    0	300	360	210	590	475	500	690
    300	0	380	270	230	285	200	390
    360	380	0	510	230	765	580	770
    210	270	510	0	470	265	450	640
    590	230	230	470	0	515	260	450
    475	285	765	265	515	0	460	650
    500	200	580	450	260	460	0	190
    690	390	760	640	450	650	190	0
    ]/(100/3); % 邻接矩阵(行走时间)
n = factorial(6); % 所有可能的走法种类
path = [ones(n,1),perms(2:7),ones(n,1)*8]; % 所有可能的走法
dist = zeros(1,n); % 每种走法的距离
for i = 1:n % 计算每种走法的总时间
    for j = 1:7
        dist(i) = dist(i) + G(path(i,j),path(i,j+1));
    end
end
[~,z] = sort(dist); % 获得路程从短到长的排序索引
path = path(z,:);dist = dist(z); % 路径和总时间按从小小到大排列
lp = [0,10,20,30,30,20,30,30]; % 每个景点浏览的时间下限
up = [0,30,60,30,60,60,60,690]; % 每个景点浏览的时间上限

BB = {};
for k = 1:n
    p = path(k,:); 
    %% 获取每段行走时间
    d = zeros(1,8);%记录七段路的行走时间
    for i = 1:7
        d(i) = G(p(i),p(i+1)); % 得到走第i条路花费的时间
    end
    
    %% 15:50之前到游客服务中心的条件
    t2 = 0;%到达游客服务中心之前的步行总时间
    w2 = find(p==2); % 游客服务中心在第几个目的地
    l2 = 0;u2 = 0;%到达游客服务中心之前的最短游览时间和最长游览时间
    for i = 1:w2-1
        t2 = t2 + d(i); %累加行走时间
        if i < w2
            l2 = l2 + lp(p(i));%到达剧场前累加最短游览时间
            u2 = u2 + up(p(i));%到达剧场前累加最长游览时间
        end
    end
    
    %% 17:00之前到商业街的条件
    t8 = 0;%到达商业街之前的步行总时间
    w8 = find(p==8); % 商业街在第几个目的地
    l8 = 0;u8 = 0;%到商业街之前的最短游览时间和最长游览时间
    for i = 1:w8-1
        t8 = t8 + d(i); %累加行走时间
        l8 = l8 + lp(p(i));%到达商业街前累加最短游览时间
        u8 = u8 + up(p(i));%到达商业街前累加最长游览时间
    end
    
    %% 满足到达整半点到剧场的条件
    t4 = 0;%到达剧场之前的步行总时间
    w4 = find(p == 4); % 戏剧场在第几个目的地(景山为第一个)
    l4 = 0;u4 = 0; %到达剧场之前的最短游览时间和最长游览时间
    for i = 1:w4-1
        t4 = t4 + d(i); %累加行走时间
        l4 = l4 + lp(p(i));%到达剧场前累加最短游览时间
        u4 = u4 + up(p(i));%到达剧场前累加最长游览时间
    end
    
    %等式约束,
    d1 = 1:w4-1; % 到剧场前经过的点
    d1_min = t4 + l4;d1_max = t4 + u4;%到达剧场时间的上下界
    d1_d = [];j = 30; % 到剧场前经过的点的总游览时间=d1_d
    while j <= d1_max
        if j >= d1_min
            d1_d = [d1_d,j-t4];
        end
        j = j + 30;
    end
    
    %不等式约束
    b1 = 1:w2-1; % 到客户服务中心前进过的点
    b1_max = min(t2+u2,230)-t2; %到达游客服务中心之前的游览时间的上界
    b2 = 1:w8-1; % 到商业街前进过的点
    b2_max = min(t8+u8,300)-t8; %到达商业街之前的游览时间时间的上界
    
    %上下界
    Lp = lp(p);Up = up(p);
    
    %保存结果
    BB{k}{1} = p;BB{k}{2} = d;BB{k}{3} = {d1,d1_d,b1,b1_max,b2,b2_max,Lp,Up};
end 

